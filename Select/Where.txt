
Where절 : 조건에 맞는 레코드를 검색하기 위해 사용한다.
Ex)
select *
from customers
where country = 'Germany'
* Where 절에는 비교 연산자, 논리 연산자 사용 가능


-------- 아래 연산자들은 Where 절에서 사용되어야 한다. --------
In 연산자 : 특정한 데이터를 검색하기 위하여 사용한다.
Ex)
select *
from customers
where country in('Germany', 'France')
// where country = 'Germany' or country = 'France' 이 구문과 결과 값이 같다.

Like 연산자 : 와일드카드 문자와 함께 쓰이며, 문자를 포함하는 데이터를 검색하기 위해 사용.
ex)
select *
from customers
where country like 'Br%' // Br로 시작하는 데이터 검색

와일드카드 문자 : '%', '_'
ex)
select *
from customers
where country like '%r%'
ex)
select *
from customers
where country like 'Brazil' // where country = 'Brazil'과 같은 결과이다.
// 찾고싶은 데이터가 명확할 때, '=' 연산자를 사용하는 것이 성능면에서 더 우수하다.
ex)
select *
from customers
where country like 'B_____' // 언더바의 갯수와 문자열의 길이가 같은 문자를 출력해준다.
// 인터프리터에게 언터바의 갯수만큼 string의 길이가 같은 문자를 찾아달라고 요구하는 것이다.(인터프리터에게 데이터베이스에 존재하는 데이터에 한하여 빈글자 채워넣기를 시키는 것이라 생각하면 된다.)

Between 연산자 : and와 함께 쓰이며, 기준 값을 포함하며 기준 값 사이에 존재하는 값을 가져온다.
Ex)
select *
from customers
where customerid between 3 and 5
// where customerid >= 3 and customerid <= 5와 결과 값이 같다.

** SQL에서 Escape Character 또한 '\'를 이용한다.

-------- Problem Solving --------
1. Revising the Select Query 1 : https://www.hackerrank.com/challenges/revising-the-select-query/problem?h_r=internal-search
sql>
select *
from city
where countrycode = 'USA' and population > 100000

2. Select By ID : https://www.hackerrank.com/challenges/select-by-id/problem?h_r=internal-search
sql>
select *
from city
where id = 1661

3. Weather Observation Station 6 : https://www.hackerrank.com/challenges/weather-observation-station-6/problem?h_r=internal-search
Issues : 
1) select city
from station
where city like 'A%' or 'E%' or 'I%' or 'O%' or 'U%' // 'A'로 시작하는 문자만 검색된다...

2) select city
from station
where city like 'A%'
where city like 'E%'
where city like 'I%'
where city like 'O%'
where city like 'U%' // 이렇게 쓰면 Error 발생. where절은 하나만 쓸수 있다?

3) select city
from station
where city in ('A%') // 이 것도 안된다.

sql>
select city
from station
where city like 'A%' 
   or city like 'E%'
   or city like 'I%'
   or city like 'O%'
   or city like 'U%' // where [속성명] like 'A%'에서 많은 like 연산자를 이용하기 위한 방법
        

4. Weather Observation Station 12 : https://www.hackerrank.com/challenges/weather-observation-station-12/problem?h_r=internal-search
sql>
select distinct city
from station
where city not like 'a%' 
   and city not like 'e%'
   and city not like 'i%'
   and city not like 'o%'
   and city not like 'u%'
   and city not like '%a'
   and city not like '%e'
   and city not like '%i'
   and city not like '%o'
   and city not like '%u'

* distinct를 select문 앞에 작성하여 중복을 제거할 수 있다.
   