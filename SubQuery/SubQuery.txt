SubQuery : 가상의 테이블을 하나 더 만들어서 질의한다.
Ex)
select daily_stats.week, avg(daily_stats.incidents_daily)
from (
	select week, date, count(incident_id) as incidents_daily
	from crimes
	group by week, date
	) daily_stats
group by daily_stats.week

Ex)
select *
from crimes
where date = (select min(date) from crimes) // 서브쿼리의 결과물이 1개여야만 한다.

Ex)
select *
from crimes
where date in (select date from crimes order by date desc limit 5)


-------- Problem Solving --------
1. Top Earners : https://www.hackerrank.com/challenges/earnings-of-employees/problem?h_r=internal-search
sql>
select distinct salary * months as earnings, count(*)
from employee
where salary * months = (select max(salary * months) from employee)
group by earnings

2. <LeetCode> 184. Department Highest Salary : https://leetcode.com/problems/department-highest-salary/
sql>
select d.name as department, e.name as employee, e.salary
from employee as e
    inner join (
        select departmentid, max(salary) as max_salary
        from employee
        group by departmentid
    ) as dh on e.departmentid = dh.departmentid
    and e.salary = dh.max_salary
    inner join department as d on d.id = e.departmentid

3. Challenges : https://www.hackerrank.com/challenges/challenges/problem?h_r=internal-search
sql>
select hackers.hacker_id, hackers.name, count(*) challenges_created
from challenges
    inner join hackers on challenges.hacker_id = hackers.hacker_id
group by hackers.hacker_id, hackers.name
having challenges_created = (select max(challenges_created) 
                             from (
                                 select hacker_id, 
                                 count(*) as challenges_created
                                 from challenges 
                                 group by hacker_id
                             ) sub)
                             or challenges_created in(
                                select challenges_created
                             from(select hacker_id
                                 , count(*) as challenges_created
                                  from challenges
                                  group by hacker_id
                                 ) sub
                                 group by challenges_created
                                 having count(*) = 1)
order by challenges_created desc, hacker_id

 * with를 이용하면 서브쿼리를 하나의 테이블로써 정의가 가능하다
 Ex) with counter as(
 	select hackers.hacker_id, hackers.name, count(*) as challenges_created
 	from challenges
 		inner join hackers on challenges.hacker_id = hackers.hacker_id
 		group by hackers.hacker_id, hackers.name
 )
 
 select counter.hacker_id, counter.name, counter.challenges_created
 from counter
 where challenges_created = (select max(challenges_created) from counter)
  or challenges_created in(select challenges_created
                         from counter
                          group by challenges_created
                          having count(*) = 1
                         )
 order by counter.challenges_created desc, counter.hacker_id
 
4. The Report : https://www.hackerrank.com/challenges/the-report/problem?h_r=internal-search
sql>
select case when g.grade < 8 then null else s.name end as name, g.grade, s.marks
from students as s
    inner join grades as g on s.marks between g.min_mark and g.max_mark
order by g.grade desc, name, s.marks
 
5. <LeetCode> 180. Consecutive Numbers : https://leetcode.com/problems/consecutive-numbers/
sql>
select l.id as ConsecutiveNums
from logs as l
    inner join logs as l_next on l.id + 1 = l_next.id
    inner join logs as l_next2 on l.id + 2 = l_next2.id
where l.num = l_next.num and l.num = l_next2.num

