Join 연산 : 여러 테이블들(대표적인 DB : RDB)의 관계를 통하여 목록 조회
 * 가령, 고객의 테이블과 고객이 물품을 구매한 테이블 두 개의 테이블이 존재할 때, 두 테이블의 관계를 통해 Join 연산을 수행한다.
 * 엑셀을 예로 들면, 두 개의 시트가 있는 것을 하나의 시트로 합쳐 데이터를 조회하는 것으로 생각할 수 있다.

1) Inner Join : Inner Join은 두개의 테이블에 모두 존재하는 데이터에 대해서만 결과값을 출력한다.(둘 중, 한 곳에 어떤 데이터에 대해 Null 값이 없다면 결과값에 안나온다)
Ex)
 select *
 from users, orders(Cartesian Product : 모든 경우를 다 보여준다)
 where users.id = orders.usersid // 이같은 방법으로 테이블을 조인할 수 있다
 
 select *
 from users
 	inner join orders on users.id = orders.userid(기본키와 외래키를 기준으로 조인을 한다.) // 위와 같은 결과를 얻을 수 있다.
  * https://sql-joins.leopard.in.ua/ : SQL Visualize를 위한 site
 
Ex)
 select *
 from orders
	inner join customers on orders.customerid = customers.customerid
    inner join shippers on orders.shipperid = shippers.shipperid
 order by orderid

2) Left Join(Outer Join) : Left Join의 경우에는 Inner Join과 다르게, 존재하지 않는 데이터 또한 출력을 한다.
Ex)
 select *
 from customers
	left join orders on customers.customerid = orders.customerid
*********************** Inner Join vs Left Join ***********************
 select *
 from customers
	inner join orders on customers.customerid = orders.customerid
    where orderid is null // 이 코드는 아무 것도 출력되지 않는다.
  
  select *
  from customers
	left join orders on customers.customerid = orders.customerid
    where orderid is null // 테이블을 조인하여 null 값도 같이 출력해준다.

-------- Problem Solving --------
1. African Cities : https://www.hackerrank.com/challenges/african-cities/problem?h_r=internal-search
sql>
 select distinct city.name
 from city
    inner join country on city.countrycode = country.code
    where country.continent = 'Africa'

2. Population Census : https://www.hackerrank.com/challenges/asian-population/problem?h_r=internal-search
sql>
 select sum(city.population)
 from city
    inner join country on country.code = city.countrycode
    where country.continent = 'Asia'
    
3. Average Population of Each Continent : https://www.hackerrank.com/challenges/average-population-of-each-continent/problem?h_r=internal-search
sql>
 select continent, floor(avg(city.population))
 from country
    inner join city on city.countrycode = country.code
    group by continent

4. <LeetCode> 183. Customers Who Never Order : https://leetcode.com/problems/customers-who-never-order/
sql>
 select name as 'Customers'
 from customers
    left join orders on customers.id = orders.customerid
    where orders.id is null